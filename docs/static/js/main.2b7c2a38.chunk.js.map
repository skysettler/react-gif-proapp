{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBC,OACI,sBAAMC,SAfU,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,MASlB,SACE,uBACEO,KAAO,OACPC,MAAOT,EACPU,SAtBiB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,aA2B/BZ,EAAYe,WAAa,CAErBd,cAAee,IAAUC,KAAKC,Y,mCClCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,gEAGKI,MAAOF,GAHZ,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EAEzB,MAAM,CAEFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAiBZM,GAjBY,4CAAH,sDCAPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBT,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MAGhC,OACI,sBAAKI,UAAU,8CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAKA,EAAL,WCLCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECHwB,SAACA,GAEzB,MAA0BlB,mBAAS,CAE/ByB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OApBAC,qBAAW,WAEHxB,EAAQC,GACPwB,MAAM,SAAAd,GACHY,EAAS,CACLf,KAAMG,EACNU,SAAS,UAclBC,EDzBiBI,CAAazB,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAIb,OAEI,qCACA,qBAAIJ,UAAU,6CAAd,cAA6DhB,EAA7D,OAEEoB,GAAW,mBAAGJ,UAAU,wCAAb,eAEb,qBAAKA,UAAU,YAAf,SAEQT,EAAKE,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEMA,GADEA,EAAIC,aEhBjBe,EAAe,WAGxB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAQA,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAKA,6BAEQ8C,EAAWlB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MCxBzB4B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2b7c2a38.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n   \r\n   const [inputValue, setInputValue] = useState(\"\")\r\n   const handleInputChange = (e) => {\r\n       setInputValue (e.target.value);\r\n   }\r\n   const handleSubmit = (e)=>{\r\n       e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2 ) {\r\n\r\n            setCategories (cats => [ inputValue,...cats]);\r\n            setInputValue(\"\");\r\n\r\n\r\n        }\r\n\r\n       \r\n       \r\n   }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <input \r\n            type = \"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange }\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}","\r\n\r\nexport const getGifs = async (category)=> {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)} &limit=10&api_key=fPvG0jWZXkk0PrIAZjip3iWrbySG56I2`\r\n    const respuesta = await fetch (url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map (img =>{\r\n\r\n        return{\r\n\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n\r\n        }})\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,url,title}) => {\r\n\r\n\r\n    return (\r\n        <div className='card animate__animated animate__backInRight'>\r\n            <img src={ url } alt={ title } />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n \r\n    \r\n\r\n    return (\r\n        \r\n        <>\r\n        <h3 className='card animate__animated animate__rubberBand'> {category} </h3>\r\n\r\n        { loading && <p className='card animate__animated animate__flash'> </p> }\r\n        \r\n        <div className='card-grid'>\r\n            {\r\n                data.map ( img => (\r\n                  <GifGridItem \r\n                    key= {img.id}\r\n                    {...img}\r\n                  />     \r\n                ))\r\n            }\r\n        </div>\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\n","import {useEffect, useState}  from 'react';\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n   \r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect (()=> {\r\n  \r\n            getGifs(category)\r\n            .then (img => {\r\n                setstate({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n            });\r\n        \r\n    })\r\n\r\n  /*   setTimeout (() =>{\r\n        setstate({\r\n            \r\n            data: [1,2,3,4,5,6,7],\r\n            loading: false\r\n        })\r\n    },3000); */\r\n\r\n    return state;\r\n}\r\n","\r\nimport React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n   \r\n   //const categories = [\"One Punch\", \"Samurai X\", \"Dragon Ball\"];\r\n    const [categories, setCategories] = useState([\"One Punch\"]);\r\n   \r\n   \r\n    /* const handleAdd = ()=> {\r\n        //setCategories ([...categories, \"HunterXHunter\"]);\r\n        setCategories (cats => [...categories, \"HunterXHunter\"]); */\r\n    \r\n   \r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories= {setCategories} />\r\n\r\n        <hr />  \r\n\r\n        \r\n\r\n\r\n        <ol>\r\n            {\r\n                categories.map(category => (\r\n\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={ category}\r\n                    />\r\n                \r\n                    ))\r\n                \r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from \"./GifExpertApp\"\n\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}